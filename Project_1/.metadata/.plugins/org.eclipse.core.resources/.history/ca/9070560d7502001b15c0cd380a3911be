package TheMain;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;
import javax.swing.Timer;



public class Main extends JFrame implements KeyListener{

	Container c = new Container();
	int BoundX = 1316, BoundY = 738;
	Cursor hand = new Cursor(Cursor.HAND_CURSOR);
	Toolkit tools = getToolkit();
	Image curImg = tools.getImage("cur.png");
	Image curImg2 = tools.getImage("cur2.png");
	
	int X_Val = 20;
	int Y_Val = 0;
	int Const = 5;
	int side = 0;
	int time = 180;
	int time2 = 99999;
	int key = -1;
	int life = 3;
	int blued = 0;
	int greend = 0;
	int redd = 0;
	int LevelSelect = 1;
	int LastLevel = -1;
	int score = 0;
	
	boolean pressing = false;
	boolean enemy1killed = false, enemy2killed = false, enemy3killed = false, enemy4killed = false;
	boolean d1 = false, d2 = false, d3 = false;
	
	ImageIcon plr = new ImageIcon("playerr.png");
	ImageIcon plr2 = new ImageIcon("playerl.png");
	ImageIcon plrlp = new ImageIcon("playerlp.png");
	ImageIcon plrrp = new ImageIcon("playerrp.png");
	ImageIcon enemy = new ImageIcon("enemyl.png");
	ImageIcon enemyr = new ImageIcon("enemyr.png");
	ImageIcon enemy1fk = new ImageIcon("enemy1fk.png");
	ImageIcon enemy1hk = new ImageIcon("enemy1hk.png");
	ImageIcon enemy2live = new ImageIcon("enemy2.png");
	ImageIcon enemy2fk = new ImageIcon("enemy2fk.png");
	ImageIcon enemy1al  = new ImageIcon("enemy1al.png");
	ImageIcon red = new ImageIcon("redo.png");
	ImageIcon green = new ImageIcon("greeno.png");
	ImageIcon blue = new ImageIcon("blueo.png");
	ImageIcon redr = new ImageIcon("redr.png");
	ImageIcon greenr = new ImageIcon("greenr.png");
	ImageIcon bluer = new ImageIcon("bluer.png");
	ImageIcon exit1 = new ImageIcon("exit1.png");
	ImageIcon exit2 = new ImageIcon("exit2.png");
	ImageIcon plrcla = new ImageIcon("playercla.png");
	ImageIcon plrc1 = new ImageIcon("playerc1.png");
	ImageIcon plrc2 = new ImageIcon("playerc2.png");
	ImageIcon plrcra = new ImageIcon("playercra.png");
	ImageIcon plrwr = new ImageIcon("playerwr.png");
	ImageIcon plrwl = new ImageIcon("playerwl.png");
	ImageIcon enemy1ar = new ImageIcon("enemy1ar.png");
	
	JLabel scc = new JLabel();
	JLabel exit = new JLabel();
	JLabel diamond1 = new JLabel();
	JLabel diamond2 = new JLabel();
	JLabel diamond3 = new JLabel();
	JLabel player = new JLabel();
	JLabel timelabel = new JLabel();
	JLabel lv1e1 = new JLabel();
	JLabel enemy1 = new JLabel();
	JLabel lifelabel = new JLabel();
	JLabel enemy2 = new JLabel();
	JLabel enemy3 = new JLabel();
	JLabel enemy4 = new JLabel();
	
	
	Font tm = new Font("Calibre", Font.BOLD, 20);
	Font lf = new Font("Calibre", Font.BOLD, 50);
	Font scf = new Font("Calibre", Font.BOLD, 30);
	
	Main(){
		setBounds(0, 0, BoundX, BoundY);
		setVisible(true);
		setTitle("Arnab's Game");
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);
		addKeyListener(this);
		setCursor(tools.createCustomCursor(curImg, new Point(0, 0), "customCursor"));
		
		initPaint();
	}
	
	public void initPaint() {
		c = getContentPane();
		c.setLayout(null);
		c.setBackground(Color.white);
		
		
		MainMenu();
	}
	
	public void MainMenu() {
		c.removeAll();
		
		JButton cont = new JButton();
		cont.setBounds(202, 315, 478, 70);
		cont.setContentAreaFilled(false);
		cont.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		cont.setFocusable(false);
		c.add(cont);	
		cont.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Level1();
				//CallContinue();
			}
		});	
		
		JButton newgame = new JButton();
		newgame.setBounds(202, 399, 478, 70);
		newgame.setContentAreaFilled(false);
		newgame.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		newgame.setFocusable(false);
		c.add(newgame);	
		newgame.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int cnfrm = JOptionPane.showConfirmDialog(null, "======================================="
						+ "\n= Are You Sure Want To Start A New Game?      ="
						+ "\n= All Your Previous Progress Will Be Deleted!    ="
						+ "\n=======================================", "Warning!", JOptionPane.YES_NO_CANCEL_OPTION);
				
				if(cnfrm==JOptionPane.YES_OPTION)
					Level1();
					//CallNewGame();
				else CallContinue();
			}
		});	
		
		JButton levels = new JButton();
		levels.setBounds(202, 482, 478, 70);
		levels.setContentAreaFilled(false);
		levels.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		levels.setFocusable(false);
		c.add(levels);	
		levels.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					CallLevels();
			}
		});	
		
		JButton exit = new JButton();
		exit.setBounds(202, 566, 478, 70);
		exit.setContentAreaFilled(false);
		exit.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		exit.setFocusable(false);
		c.add(exit);	
		exit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int cnfrm = JOptionPane.showConfirmDialog(null, "Are You Really Want To Exit?", 
						"Confirmation", JOptionPane.YES_NO_CANCEL_OPTION);
				
				if(cnfrm==JOptionPane.YES_OPTION) {
					System.exit(0);
				}		
			}
		});	
		
		ImageIcon bc = new ImageIcon("MainMenu1.png");
		JLabel mm = new JLabel();
		mm.setBounds(0, 0, 1300, 700);
		mm.setIcon(bc);
		mm.setVisible(true);
		c.add(mm);
		
		
		repaint();
	}
	
	public void CallContinue() {
		
	}
	public void CallNewGame() {
		
	}
	public void CallLevels() {
		c.removeAll();
		
		JButton lv1 = new JButton();
		lv1.setBounds(20, 235, 300, 255);
		lv1.setContentAreaFilled(false);
		lv1.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		lv1.setFocusable(false);
		c.add(lv1);	
		lv1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					Level1();
			}
		});	
		JButton lv2 = new JButton();
		lv2.setBounds(370, 350, 300, 235);
		lv2.setContentAreaFilled(false);
		lv2.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		lv2.setFocusable(false);
		c.add(lv2);	
		lv2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					
			}
		});	
		JButton lv3 = new JButton();
		lv3.setBounds(680, 480, 300, 215);
		lv3.setContentAreaFilled(false);
		lv3.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		lv3.setFocusable(false);
		c.add(lv3);	
		lv3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					
			}
		});	
		JButton lv4 = new JButton();
		lv4.setBounds(300, 30, 600, 200);
		lv4.setContentAreaFilled(false);
		lv4.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		lv4.setFocusable(false);
		c.add(lv4);	
		lv4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					
			}
		});
		
		JButton back = new JButton();
		back.setBounds(10, 2, 75, 45);
		back.setContentAreaFilled(false);
		back.setCursor(tools.createCustomCursor(curImg2, new Point(0, 0), "customCursor"));
		back.setFocusable(false);
		c.add(back);	
		back.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				MainMenu();
			}
		});
		
		ImageIcon bc = new ImageIcon("Levels1.png");
		JLabel mm = new JLabel();
		mm.setBounds(0, 0, 1300, 700);
		mm.setIcon(bc);
		mm.setVisible(true);
		c.add(mm);
		repaint();
	}
	
	public void Level1() {
		c.removeAll();
		
		player.setIcon(plr);
		player.setBounds(Y_Val, X_Val, 100, 120);
		c.add(player);
		timelabel.setText("NULL");
		timelabel.setBounds(1200, 104, 200, 100);
		timelabel.setFont(tm);
		timelabel.setVisible(true);
		c.add(timelabel);
		lifelabel.setText(""+life);
		lifelabel.setBounds(1230, 213, 200, 100);
		lifelabel.setFont(lf);
		c.add(lifelabel);
		
		time2 = 9999;
		
		Timer t2 = new Timer(200, new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				time2--;
				RefreshLv1Timer();
			}
		});
		t2.start();
		
		Timer t = new Timer(1000, new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				time--;
				RefreshLv1Timer();
				
				if(time>=0)
					timelabel.setText(""+(time / 60)+":"+(time % 60));
			}
		});
		t.start();
		
		ImageIcon bc = new ImageIcon("level1.png");
		JLabel mm = new JLabel();
		mm.setBounds(0, 0, 1300, 700);
		mm.setIcon(bc);
		mm.setVisible(true);
		c.add(mm);
		repaint();
		
		RefreshLv1();
	}
	
	public void keyTyped(KeyEvent e) {
	    }
	    
	public void keyPressed(KeyEvent e) {

		int keycode = e.getKeyCode();
		
		if(keycode == KeyEvent.VK_A) {
			key = 1;
			side = 0;
			
			if(Y_Val<=0) {
				Y_Val =  Y_Val+Const;
			}	
		}
		else if(keycode == KeyEvent.VK_D) {
			key = 2;
			side = 1;
			
			if(Y_Val>=1020) {
				Y_Val = Y_Val-Const;
			}
		}
		else if(keycode == KeyEvent.VK_W) {
			key = 3;
			if(X_Val<=10) {
				X_Val = X_Val+Const;
			}
		}
		else if(keycode == KeyEvent.VK_S) {
			key = 4;
			if(X_Val>=530) {
				X_Val = X_Val-Const;
			}
		}
		else if(keycode == KeyEvent.VK_Q) {
			key = 5;
			pressing = true;
			System.out.println("Q = "+key);
		}
		System.out.println("Y = "+Y_Val+"-----X = "+X_Val);
		RefreshLv1();
	}

	public void keyReleased(KeyEvent e) {
		int keycode = e.getKeyCode();
		
		if(keycode == KeyEvent.VK_Q) {
			key = 5;
			pressing = false;
			RefreshLv1();
		}
	}
	
	public void CallLv1Win() {
		c.removeAll();
		
		JLabel lifebonus = new JLabel();
		lifebonus.setText(""+life+"x1000 = "+(life*1000));
		lifebonus.setBounds(630, 225, 400, 100);
		lifebonus.setFont(scf);
		c.add(lifebonus);
		
		JLabel enemyscore = new JLabel();
		enemyscore.setBounds(630, 290, 400, 100);
		enemyscore.setText("2x1000 = 2000");
		enemyscore.setFont(scf);
		c.add(enemyscore);
		
		JLabel dscore = new JLabel();
		dscore.setBounds(630, 345, 400, 100);
		dscore.setText("3x1000 = 3000");
		dscore.setFont(scf);
		c.add(dscore);
		
		int score = (life*1000)+2000+3000;
		JLabel scorelabel = new JLabel();
		scorelabel.setBounds(630, 410, 400, 100);
		scorelabel.setText("                 "+score);
		scorelabel.setFont(scf);
		c.add(scorelabel);
		
		ImageIcon bc = new ImageIcon("winlv1.png");
		JLabel mm = new JLabel();
		mm.setBounds(0, 0, 1300, 700);
		mm.setIcon(bc);
		mm.setVisible(true);
		c.add(mm);
		
		repaint();	
		
	}
	public void PhysicLv1() {
		if(key==1) {
			Y_Val = Y_Val-Const;
			
			if(X_Val>25 && X_Val<250) {
				if(Y_Val<815) {
					Y_Val = Y_Val+Const;
				}
			}
		}
		else if(key==2) {
			Y_Val = Y_Val+Const;
			
			if(X_Val>155 && X_Val<=495) {
				if(Y_Val>950) {
					Y_Val = Y_Val-Const;
				}
			}
			if(X_Val>275 && X_Val<490) {
				if(Y_Val>140 && Y_Val<950) {
					Y_Val = Y_Val-Const;
				}
			}
		}
		else if(key==3) {
			X_Val = X_Val-Const;
			
			if(Y_Val>=0 && Y_Val<815) {
				if(X_Val>25 && X_Val<250) {
					X_Val = X_Val+Const;
				}
			}
			if(Y_Val>140 && Y_Val<=1020) {
				if(X_Val<500 && X_Val>270) {
					X_Val = X_Val+Const;
				}
			}
		}
		else if(key==4) {
			X_Val = X_Val+Const;
			
			if(Y_Val>950) {
				if(X_Val>155) {
					if(X_Val<500) {
						X_Val = X_Val-Const;
					}
				}
			}
			if(Y_Val>=0 && Y_Val<815) {
				if(X_Val>25 && X_Val<250) {
					X_Val = X_Val-Const;
				}
			}
			if(Y_Val>140 && Y_Val<=950) {
				if(X_Val>270 && X_Val<495) {
					X_Val = X_Val-Const;
				}
			}
		}
	}
	
	public void RefreshLv1Timer() {
		
		enemy1.setBounds(470, 25, 120, 120);
		enemy3.setBounds(720, 270, 120, 120);
		
		if(enemy3killed==true) {
			enemy3.setBounds(720, 290, 120, 120);
		}
		
		
		if(time2%2==0) {
			if(enemy3killed==false) {
				if(Y_Val<800 && X_Val>=240 && X_Val<=280) {
					enemy3.setIcon(enemy1ar);
				}
				else{
					enemy3.setIcon(enemy);
				}
			}
			else {
				enemy3.setIcon(enemy1fk);
			}
		}
		else {
			if(enemy3killed==false) {		
				enemy3.setIcon(enemyr);
			}
			else {
				enemy3.setIcon(enemy1fk);
			}
		}
		
		if(time2%2==0) {
			diamond1.setIcon(green);
			diamond2.setIcon(redr);
			diamond3.setIcon(blue);
			
			if(enemy1killed==false) {
				if(Y_Val>380 && Y_Val<550) {
					enemy1.setBounds(430, 25, 120, 120);
					enemy1.setIcon(enemy1al);
				}
				else {
					enemy1.setIcon(enemyr);
				}
			}
			else {
				enemy1.setBounds(470, 45, 120, 120);
				enemy1.setIcon(enemy1fk);
			}
		}
		else {			
			diamond1.setIcon(greenr);
			diamond2.setIcon(red);
			diamond3.setIcon(bluer);
			
			if(enemy1killed==false) {
				if(Y_Val>380 && Y_Val<550) {
					enemy1.setIcon(enemy);
				}
				else {
					enemy1.setIcon(enemy);
				}
			}
			else {
				enemy1.setBounds(470, 45, 120, 120);
				enemy1.setIcon(enemy1fk);
			}	
		}
	}
	public void SetPlayerClimb() {
		if(time2%2==0) {
			player.setIcon(plrc1);
		}
		else {
			player.setIcon(plrc2);
		}
	}
	
	public void SetPlayerWalk() {
		if(time2%2==0) {
			if(side==1) {
				player.setIcon(plr);
			}
			else {
				player.setIcon(plr2);
			}
		}
		else {
			if(side==1) {
				player.setIcon(plrwr);
			}
			else {
				player.setIcon(plrwl);
			}
		}
	}
	
	public void RefreshLv1() {
		c.removeAll();
		
		
		
		if(Y_Val>1000 && X_Val>500 && d1==true && d2==true && d3==true) {
			CallLv1Win();
		}
		PhysicLv1();
		if(d1==true && d2==true && d3==true) {
			exit.setIcon(exit1);
		}
		else {
			exit.setIcon(exit2);
		}
		
		exit.setBounds(770, 500, 400, 150);
		c.add(exit);
		
		if(key<5) {
			if(side==0) {
				if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
					SetPlayerWalk();
				}
				else {
					SetPlayerClimb();
				}
			}
			else if(side==1) {
				if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
					SetPlayerWalk();
				}
				else {
					SetPlayerClimb();
				}
			}
		}
		else if(key==5) {
			if(side==0) {
				if(pressing==true) {
					if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
						player.setIcon(plrlp);
					}
					else {
						player.setIcon(plrcla);
					}
				}
				else if(pressing==false) {
					if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
						SetPlayerWalk();
					}
					else {
						SetPlayerClimb();
					}
				}
			}
			else if(side==1) {
				if(pressing==true) {
					if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
						player.setIcon(plrrp);
					}
					else {
						player.setIcon(plrcra);
					}
				}
				else if(pressing==false) {
					if((X_Val>=20 && X_Val<=25 && Y_Val>=0 && Y_Val<=760) || (Y_Val>=980 && Y_Val<=1030 && X_Val>=150 && X_Val<=155) || (Y_Val>=180 && Y_Val<=960 && X_Val>=265 && X_Val<=270) || (Y_Val>=0 && Y_Val<=1020 && X_Val>=525 && X_Val<=540)) {
						SetPlayerWalk();
					}
					else {
						SetPlayerClimb();
					}
				}
			}
		}
		

		scc.setBounds(1160, 55, 300, 70);
		scc.setFont(scf);
		
		enemy2.setIcon(enemy2live);
		enemy2.setBounds(820, 20, 80, 80);
		enemy4.setIcon(enemy2live);
		enemy4.setBounds(400, 270, 80, 80);
		
		diamond1.setBounds(1020, 170, 120, 120);
		diamond2.setBounds(220, 280, 120, 120);
		diamond3.setBounds(530, 550, 120, 120);
		
		if(Y_Val>975 && X_Val>110 && d1==false) {
			d1 = true;
			score = score+1000;
		}
		if(Y_Val<280 && Y_Val>175 && X_Val>245 && X_Val<275 && d2==false) {
			d2 = true;
			score = score+1000;
		}
		if(Y_Val>485 && Y_Val<590 && X_Val>490 && X_Val<600 && d3==false) {
			d3 = true;
			score = score+1000;
		}
		scc.setText(""+score);
		
		if(d1==false) c.add(diamond1);
		else c.remove(diamond1);
		if(d2==false) c.add(diamond2);
		else c.remove(diamond2);
		if(d3==false) c.add(diamond3);
		else c.remove(diamond3);

		player.setBounds(Y_Val, X_Val, 100, 120);
		
		if(Y_Val>=410 && enemy1killed==false && pressing==true) {
			enemy1killed = true;
			score = score+1000;
			scc.setText(""+score);
		}
		
		if(Y_Val>420 && enemy1killed==false && pressing==false) {
			life = life-1;
			lifelabel.setText(""+life);
			Y_Val = 5;
			X_Val = 20;
		}
		
		if(Y_Val>=760 && enemy2killed==false && pressing==true) {
			enemy2.setIcon(enemy2fk);
			c.add(enemy2);
			enemy2killed = true;
			score = score+1000;
			scc.setText(""+score);
		}
		
		if(Y_Val>770 && enemy2killed==false && pressing==false) {
			life = life-1;
			lifelabel.setText(""+life);
			Y_Val = 5;
			X_Val = 20;
		}
		
		if(enemy2killed==false) {
			c.add(enemy2);
		}
		else {
			enemy2.setIcon(enemy2fk);
			enemy2.setBounds(820, 20, 80, 80);
			c.add(enemy2);
		}
		
		if(enemy3killed==false && Y_Val>=680 && Y_Val<=790 && X_Val>=240 && X_Val<=280 && pressing==true) {
			enemy3killed = true;
			score = score+1000;
			scc.setText(""+score);
		}
		if(enemy3killed==false && X_Val>=240 && X_Val<=280 && Y_Val>690 && Y_Val<780) {
			life = life-1;
			lifelabel.setText(""+life);
			Y_Val = 5;
			X_Val = 20;
		}
		
		c.add(enemy4);
		c.add(enemy3);
		c.add(scc);
		c.add(enemy1);
		c.add(lifelabel);
		c.add(player);
		c.add(timelabel);
		
		
		ImageIcon bc = new ImageIcon("level1.png");
		JLabel mm = new JLabel();
		mm.setBounds(0, 0, 1300, 700);
		mm.setIcon(bc);
		mm.setVisible(true);
		c.add(mm);
		
		repaint();	
	}
	
	public static void main(String[] args) {
		Main frm = new Main();
		
		System.out.print("Hello World");
	}	
}
